{"version":3,"sources":["helpers/scrolling/UseScroll.tsx","helpers/common/Hashset.ts","helpers/common/Hooks.tsx","helpers/common/DevReloadClock.tsx","helpers/scrolling/SmoothScroll.tsx","helpers/common/UseScreenSize.ts","helpers/common/Observable.tsx","helpers/common/Section.tsx","helpers/common/StateSerializer.tsx","app/common/AppSettings.tsx","app/content/header/scene.tsx","app/common/GlobalStyle.tsx","app/World.tsx","helpers/tween/Interpolate.ts","helpers/scrolling/ScrollTo.ts","helpers/tween/index.ts","helpers/tween/Easing.ts","helpers/scrolling/ScrollMagnet.tsx","helpers/common/Layout.tsx","data/About.ts","app/common/PortfolioSection.tsx","app/content/header/index.tsx","data/Contact.ts","app/content/contact/index.tsx","app/common/Accentuate.tsx","helpers/common/Springs.tsx","app/content/about/index.tsx","app/Sections.tsx","helpers/common/DevMode.ts","app/index.tsx","tools/serviceWorker.ts","index.tsx"],"names":["useScroll","scrollTarget","useState","window","scrollY","scroll","setScroll","frameId","handleScroll","target","onScroll","requestAnimationFrame","addEvents","addEventListener","removeEvents","removeEventListener","cancelAnimationFrame","useEffect","Hashset","Object","setPrototypeOf","create","prototype","item","this","indexOf","push","index","splice","Array","usePrevious","value","ref","useRef","current","DevReloadClockContext","createContext","devClock","started","dispatch","_","DevReloadClock","children","initialState","useReducer","state","count","then","counter","endCount","frame","increment","useWaitFrames","Provider","SmoothScrollState","listeners","preRender","x","listener","SmoothScrollContext","HiddenDiv","styled","div","ContentDiv","animated","SmoothScrollArea","tension","enabled","startValue","onChange","contentDiv","context","useContext","previousScroll","divHeight","setDivHeight","console","log","init","smoothScroll","useSpring","top","from","config","onFrame","scrollTo","setValue","immediate","update","step","useUpdate","undefined","newDivHeight","getBoundingClientRect","height","style","useSmoothScroll","setSmoothScroll","add","remove","getScreenSize","width","Math","max","document","documentElement","clientWidth","innerWidth","clientHeight","innerHeight","useScreenSize","size","setSize","onResize","Observable","defaultSectionState","visible","ratio","side","viewport","center","rect","bottom","SectionAreaState","states","Map","sections","section","has","id","set","updateSectionState","delete","sectionId","get","rectCenter","viewportCenter","topVisible","bottomVisible","screenSize","forEach","SectionContext","SectionArea","updateState","Section","color","def","border","addSection","removeSection","useSection","observable","getSectionState","setState","subscribe","unsubscribe","StateSerializer","serializedState","localStorage","getItem","JSON","parse","err","stringify","setItem","skipIntro","autoScroll","AppSettings","Plane","props","geometry","mesh","name","position","rotation","scale","meshBasicMaterial","attach","transparent","opacity","planeGeometry","args","intro","out","HeaderScene","camera","useThree","groupScale","settings","active","ratioOut","beforeOutRatio","useAnimatedShape","focus","plane1","fill","plane2","plane3","planes","radius","segments","cameraZStart","y","z","to","cameraPos","map","el","i","key","GlobalStyleContext","factor","GlobalStyleImpl","createGlobalStyle","reset","fontSize","GlobalStyle","newSize","min","ViewportTracker","scene","THREE","Root","zIndex","onCreated","gl","toneMapping","Uncharted2ToneMapping","setClearColor","ThreeColor","World","interpolate","start","end","t","easing","isArray","array","length","obj","keys","duration","offsetTop","onComplete","scrollMax","scrollHeight","d","abs","setter","delay","tweenId","setTweenId","startTween","startTime","Date","now","durationMs","endTime","handle","setTimeout","tween","Easing","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","SrollMagnetContextState","closestName","onCurrentChange","magnets","inTransition","scrollStep","magnet","mode","deltaY","closest","closestDist","Number","MAX_VALUE","closestDelta","dir","currentIndex","nextIndex","getElement","dist","minDistance","maxDistance","tweenDuration","ScrollMagnetContext","ScrollMagnetArea","debug","currentName","setCurrentName","Centered","info","about","PortfolioSection","Div","Name","a","Infos","Job","Location","Header","transform","job","loc","links","contacts","icon","FilePdf","link","Mail","Linkedin","GithubSquare","TwitterSquare","ContactSection","footer","ContactList","ul","Contact","Contacts","contactData","contact","Icon","iconStyle","href","Accent","span","Accentuate","text","accentuate","useMemo","blocks","split","block","slice","useDevSpring","Paragraph","useSpringThree","Left","Right","AboutDiv","Row","Break","About","f","Sections","defaultState","serializingCondition","loadState","saveState","useSerializedState","process","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.470bcbbf.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport scrollTo from './ScrollTo';\r\n\r\ninterface Props {\r\n  scrollHandler: (y: number) => void;\r\n  scrollTarget?: {\r\n    addEventListener;\r\n    removeEventListener;\r\n    scrollY: number;\r\n  };\r\n}\r\n\r\nconst useScroll = (scrollTarget = null) => {\r\n  const [scroll, setScroll] = useState((scrollTarget || window).scrollY);\r\n  let frameId = 0;\r\n\r\n  const handleScroll = () => {\r\n    const target = scrollTarget || window;\r\n    frameId = 0;\r\n\r\n    setScroll(target.scrollY);\r\n  };\r\n\r\n  const onScroll = () => {\r\n    if (!frameId) {\r\n      frameId = requestAnimationFrame(handleScroll);\r\n    }\r\n  };\r\n\r\n  const addEvents = () => {\r\n    const target = scrollTarget || window;\r\n    if (target) {\r\n      target.addEventListener('scroll', onScroll);\r\n    }\r\n  };\r\n\r\n  const removeEvents = () => {\r\n    const target = scrollTarget || window;\r\n\r\n    if (target) {\r\n      target.removeEventListener('scroll', onScroll);\r\n    }\r\n\r\n    if (frameId) {\r\n      cancelAnimationFrame(frameId);\r\n    }\r\n  };\r\n\r\n  // init, dispose\r\n  useEffect(() => {\r\n    addEvents();\r\n    handleScroll();\r\n    return () => {\r\n      removeEvents();\r\n    };\r\n  }, []);\r\n\r\n  // scrollTarget changed\r\n  useEffect(() => {\r\n    removeEvents();\r\n    addEvents();\r\n  }, [scrollTarget]);\r\n\r\n  return scroll;\r\n};\r\n\r\nexport default useScroll;\r\n","import { useEffect } from 'react';\r\n\r\nclass Hashset<T> extends Array<T> {\r\n  constructor() {\r\n    super();\r\n    Object.setPrototypeOf(this, Object.create(Hashset.prototype));\r\n  }\r\n\r\n  public add(item: T): boolean {\r\n    const index = this.indexOf(item);\r\n    if (index > 0) return false;\r\n    this.push(item);\r\n    return true;\r\n  }\r\n\r\n  public remove(item: T): boolean {\r\n    const index = this.indexOf(item);\r\n    if (index < 0) return false;\r\n    this.splice(index, 1);\r\n    return true;\r\n  }\r\n}\r\n\r\nexport const useHashSetElement = <T extends unknown>(\r\n  hashset: Hashset<T>,\r\n  element: T\r\n) => {\r\n  useEffect(() => {\r\n    hashset.add(element);\r\n    return () => hashset.remove(element);\r\n  }, [element, hashset]);\r\n};\r\n\r\nexport default Hashset;\r\n","import {useEffect, useRef, useState} from \"react\";\r\n\r\nconst useInit = (init: () => void) => {\r\n  useEffect(init, []);\r\n};\r\n\r\nconst useUpdate = (update: () => void) => {\r\n  const frame = useRef(0);\r\n\r\n  const step = () => {\r\n    update();\r\n    frame.current = requestAnimationFrame(step);\r\n  };\r\n\r\n  useEffect(() => {\r\n    frame.current = requestAnimationFrame(step);\r\n    return () => cancelAnimationFrame(frame.current);\r\n  }, []);\r\n};\r\n\r\nconst usePrevious = value => {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n};\r\n\r\nconst useWaitFrames = (count: number, then: () => void) => {\r\n  const counter = useRef(0);\r\n  const endCount = count;\r\n  const frame = useRef(0);\r\n\r\n  const increment = () => {\r\n    counter.current += 1;\r\n    if(counter.current < endCount){\r\n      frame.current = requestAnimationFrame(increment);\r\n    }else{\r\n      then();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    frame.current = requestAnimationFrame(increment);\r\n    return () => cancelAnimationFrame(frame.current);\r\n  }, []);\r\n};\r\n\r\nexport { useInit, useUpdate, usePrevious, useWaitFrames };\r\n","import * as React from 'react';\r\nimport {createContext, useReducer} from 'react';\r\nimport {useWaitFrames} from './Hooks';\r\nimport devMode from './DevMode';\r\n\r\nconst DevReloadClockContext = createContext({devClock: {started: false}, dispatch: (_: boolean) => {}});\r\n\r\nconst DevReloadClock = (\r\n  {children = null}: {children?: JSX.Element | JSX.Element[]}) => {\r\n  \r\n  const initialState = { started: !devMode };\r\n  const setStarted = (state: { started: boolean }, value: boolean) => {\r\n    return {...state, started: value}\r\n  };\r\n  \r\n  const [devClock, dispatch] = useReducer(setStarted, initialState);\r\n  useWaitFrames(2, () => dispatch(true));\r\n  \r\n  return (\r\n    <DevReloadClockContext.Provider value={{devClock, dispatch}}>\r\n      {children}\r\n    </DevReloadClockContext.Provider>);\r\n};\r\n\r\nexport { DevReloadClockContext, DevReloadClock }","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  useRef\r\n} from 'react';\r\nimport useScroll from './UseScroll';\r\nimport Hashset from '../common/Hashset';\r\nimport { animated, useSpring } from 'react-spring';\r\nimport { useInit, useUpdate, usePrevious } from '../common/Hooks';\r\nimport {DevReloadClockContext} from '../common/DevReloadClock';\r\n\r\n// context: internal\r\nclass SmoothScrollState {\r\n  value = 0;\r\n  listeners = new Hashset<(value) => void>();\r\n  preRender = true;\r\n\r\n  setValue(x: number) {\r\n    this.value = x;\r\n    for (const listener of this.listeners) {\r\n      listener(x);\r\n    }\r\n  }\r\n}\r\n\r\nconst SmoothScrollContext = createContext(new SmoothScrollState());\r\n\r\nconst HiddenDiv = styled.div`\r\n  visibility: hidden;\r\n  z-index: -1;\r\n`;\r\n\r\nconst ContentDiv = styled(animated.div)`\r\n  position: fixed;\r\n`;\r\n\r\n// area\r\n\r\nconst SmoothScrollArea = ({\r\n  children = null,\r\n  tension = 150,\r\n  enabled = true,\r\n  startValue = 0,\r\n  onChange = null\r\n}: {\r\n  children?: JSX.Element | JSX.Element[];\r\n  tension?: number;\r\n  enabled?: boolean;\r\n  startValue?: number;\r\n  onChange?: (y: number) => void;\r\n}) => {\r\n  const contentDiv = useRef(null as HTMLDivElement);\r\n  const context = useContext(SmoothScrollContext);\r\n  let scroll = useScroll(null);\r\n  const previousScroll = usePrevious(startValue);\r\n  const [divHeight, setDivHeight] = useState(500);\r\n  const {devClock} = useContext(DevReloadClockContext);   // hack  to restore previous scrolling when restarting\r\n  const started = devClock.started;\r\n  \r\n  scroll =  started ? scroll : startValue;\r\n  console.log(\"hello\");\r\n\r\n  const smoothScroll = useSpring({\r\n    top: -scroll,\r\n    from: { top: -(previousScroll ?? startValue) },\r\n    config: { tension: tension },\r\n    onFrame: (value: { top: number }) => {\r\n      if(!started){\r\n        window.scrollTo(0, startValue);\r\n      }\r\n      context.setValue(-value.top);\r\n    },\r\n    immediate: !enabled || !started\r\n  });\r\n  \r\n  useInit(() => {\r\n    context.setValue(startValue);\r\n  });\r\n  \r\n  useUpdate(() => {\r\n    if (contentDiv.current == undefined) return;\r\n    const newDivHeight = contentDiv.current.getBoundingClientRect().height;\r\n    setDivHeight(newDivHeight);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!started) return;\r\n    if (onChange) onChange(scroll);\r\n  }, [scroll]);\r\n  \r\n  return (!enabled ? <>{children}</>:\r\n    <>\r\n      <HiddenDiv\r\n        style={{\r\n          height: `${divHeight}px`\r\n        }}\r\n      />\r\n      <ContentDiv ref={contentDiv} style={smoothScroll}>\r\n        {children}\r\n      </ContentDiv>\r\n    </>\r\n  );\r\n};\r\n\r\n// use\r\n\r\nconst useSmoothScroll = () => {\r\n  const context = useContext(SmoothScrollContext);\r\n  const [smoothScroll, setSmoothScroll] = useState(0);\r\n\r\n  useEffect(() => {\r\n    context.listeners.add(setSmoothScroll);\r\n    setSmoothScroll(context.value);\r\n    return () => context.listeners.remove(setSmoothScroll);\r\n  }, []);\r\n\r\n  return smoothScroll;\r\n};\r\n\r\nexport { useSmoothScroll, SmoothScrollArea, SmoothScrollContext };\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport interface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport const getScreenSize = (): Size => {\r\n  return {\r\n    width: Math.max(\r\n      document.documentElement.clientWidth,\r\n      window.innerWidth || 0\r\n    ),\r\n    height: Math.max(\r\n      document.documentElement.clientHeight,\r\n      window.innerHeight || 0\r\n    )\r\n  };\r\n};\r\n\r\nconst useScreenSize = () => {\r\n  const [size, setSize] = useState(() => getScreenSize());\r\n\r\n  const onResize = () => {\r\n    setSize(getScreenSize());\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', onResize, true);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', onResize, true);\r\n    };\r\n  }, []);\r\n\r\n  return size;\r\n};\r\n\r\nexport default useScreenSize;\r\n","import Hashset from \"./Hashset\";\r\nimport { useEffect } from \"react\";\r\n\r\ntype Listener<T> = (value: T) => void;\r\n\r\nclass Observable<T>{\r\n  value: T;\r\n  listeners = new Hashset<Listener<T>>();\r\n\r\n  constructor(value: T) {\r\n    this.value = value;\r\n  }\r\n\r\n  set(value: T) {\r\n    this.value = value;\r\n    for (let listener of this.listeners) {\r\n      listener(value)\r\n    }\r\n  }\r\n\r\n  subscribe(listener: Listener<T>) {\r\n    this.listeners.add(listener);\r\n    listener(this.value);\r\n  }\r\n\r\n  unsubscribe(listener: Listener<T>) {\r\n    this.listeners.remove(listener);\r\n  }\r\n}\r\n\r\nconst useObservable = <T extends unknown>(observable: Observable<T>, listener: Listener<T>) => {\r\n\r\n  useEffect(() => {\r\n    observable.subscribe(listener);\r\n    return () => observable.unsubscribe(listener);\r\n\r\n  }, [observable, listener])\r\n}\r\n\r\nexport { useObservable };\r\n\r\nexport default Observable;","import * as React from 'react';\r\nimport { useRef, useEffect, createContext, useContext, useState } from 'react';\r\nimport { useSmoothScroll } from '../scrolling/SmoothScroll';\r\nimport useScreenSize, { Size } from './UseScreenSize';\r\nimport Observable, { useObservable } from './Observable';\r\nimport styled from 'styled-components';\r\n\r\n// common data structures\r\n\r\ninterface SectionDef {\r\n  div: React.MutableRefObject<HTMLDivElement>;\r\n  id: string;\r\n}\r\n\r\nexport interface ViewportState {\r\n  center: number;\r\n  height: number;\r\n}\r\n\r\nexport interface SectionState {\r\n  visible: boolean;\r\n  ratio: number;\r\n  side: number;\r\n  viewport: ViewportState;\r\n  rect: { top: number; bottom: number; height: number; center: number };\r\n}\r\n\r\nconst defaultViewportState: ViewportState = {\r\n  center: 0,\r\n  height: 0\r\n};\r\n\r\nconst defaultSectionState: SectionState = {\r\n  visible: false,\r\n  ratio: 0,\r\n  side: 1,\r\n  viewport: defaultViewportState,\r\n  rect: { top: 0, bottom: 0, height: 0, center: 0 }\r\n};\r\n\r\n// area\r\n\r\nclass SectionAreaState {\r\n  private states = new Map<string, Observable<SectionState>>();\r\n  private sections = new Map<string, SectionDef>();\r\n\r\n  private viewport: ViewportState = { center: 0, height: 0 };\r\n\r\n  addSection(section: SectionDef) {\r\n    if (this.sections.has(section.id)) return;\r\n\r\n    this.sections.set(section.id, section);\r\n    this.updateSectionState(section);\r\n  }\r\n\r\n  removeSection(section: SectionDef) {\r\n    this.sections.delete(section.id);\r\n  }\r\n\r\n  getSectionState(sectionId: string): Observable<SectionState> {\r\n    if (!this.states.has(sectionId)) {\r\n      const section = this.sections.get(sectionId);\r\n      const state =\r\n        section !== undefined\r\n          ? this.updateSectionState(section)\r\n          : defaultSectionState;\r\n      this.states.set(sectionId, new Observable<SectionState>(state));\r\n    }\r\n\r\n    return this.states.get(sectionId);\r\n  }\r\n\r\n  updateSectionState(section: SectionDef): SectionState {\r\n    const div = section.div.current;\r\n    const rect = div.getBoundingClientRect();\r\n\r\n    const rectCenter = rect.top + rect.height / 2;\r\n    const viewportCenter = this.viewport.height / 2;\r\n\r\n    const state: SectionState = {\r\n      visible: false,\r\n      ratio: 0,\r\n      side:\r\n        viewportCenter < rectCenter ? 1 : rectCenter < viewportCenter ? -1 : 0,\r\n      viewport: { center: viewportCenter, height: this.viewport.height },\r\n      rect: {\r\n        top: rect.top,\r\n        bottom: rect.bottom,\r\n        center: rectCenter,\r\n        height: rect.height\r\n      }\r\n    };\r\n\r\n    const topVisible = 0 <= rect.top && rect.top < this.viewport.height;\r\n\r\n    state.visible = topVisible || (rect.top < 0 && 0 < rect.bottom);\r\n\r\n    if (state.visible) {\r\n      const bottomVisible = rect.bottom < this.viewport.height;\r\n      if (topVisible) {\r\n        if (bottomVisible) {\r\n          state.ratio = 1;\r\n        } else {\r\n          state.ratio = 1 - (rect.bottom - this.viewport.height) / rect.height;\r\n        }\r\n      } else if (bottomVisible) {\r\n        state.ratio = (rect.height + rect.top) / rect.height;\r\n      } else {\r\n        state.ratio =\r\n          (rect.height + rect.top - (rect.bottom - this.viewport.height)) /\r\n          rect.height;\r\n      }\r\n    }\r\n\r\n    if (!this.states.has(section.id)) {\r\n      this.states.set(section.id, new Observable<SectionState>(state));\r\n    } else {\r\n      this.states.get(section.id).set(state);\r\n    }\r\n\r\n    return state;\r\n  }\r\n\r\n  updateState(scroll: number, screenSize: Size) {\r\n    this.viewport = {\r\n      center: screenSize.height / 2,\r\n      height: screenSize.height\r\n    };\r\n\r\n    this.sections.forEach(section => {\r\n      this.updateSectionState(section);\r\n    });\r\n  }\r\n}\r\n\r\nconst SectionContext = createContext(new SectionAreaState());\r\n\r\nconst SectionArea = <T extends string>({\r\n  children\r\n}: {\r\n  children: JSX.Element | JSX.Element[];\r\n}) => {\r\n  const context = useContext(SectionContext);\r\n  const scroll = useSmoothScroll();\r\n  const screenSize = useScreenSize();\r\n\r\n  useEffect(() => {\r\n    context.updateState(scroll, screenSize);\r\n  }, [context, scroll, screenSize]);\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\n// section\r\n\r\nconst Section = <TId extends string>({\r\n  id,\r\n  children = null,\r\n  height = 0,\r\n  color = null\r\n}: {\r\n  id: TId;\r\n  children?: JSX.Element | JSX.Element[];\r\n  height?: number;\r\n  color?: string\r\n}) => {\r\n  const div = useRef(null as HTMLDivElement);\r\n  const context = useContext(SectionContext);\r\n  const [def] = useState({ id: id, div: div });\r\n  const style = {\r\n    ...(color ? { border: `10px solid ${color}` }: {}),\r\n    ...(height !== 0 ? { height: height }: { height: 'auto'})\r\n  };\r\n\r\n    useEffect(() => {\r\n    context.addSection(def);\r\n    return () => context.removeSection(def);\r\n  }, [context, def]);\r\n\r\n  return (\r\n    <div ref={div} style={style}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n// useSection\r\n\r\nconst useSection = <T extends string>(section: T) => {\r\n  const context = useContext(SectionContext);\r\n  const [state, setState] = useState(context.getSectionState(section).value);\r\n\r\n  const onSectionChanged = (state: SectionState) => {\r\n    setState(state);\r\n  };\r\n\r\n  useObservable(context.getSectionState(section), onSectionChanged);\r\n\r\n  return state;\r\n};\r\n\r\n// SectionContent\r\n\r\nconst SectionContent = ({\r\n  id,\r\n  children,\r\n  setState\r\n}: {\r\n  id: string;\r\n  children: JSX.Element | JSX.Element[];\r\n  setState: (state: SectionState) => void;\r\n}) => {\r\n  const section = useSection(id);\r\n\r\n  useEffect(() => {\r\n    if (section.visible === false) return null;\r\n    setState(section);\r\n  }, []);\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport { useSection, Section, SectionArea, SectionContent };\r\n","import { useState, useEffect, Dispatch } from 'react';\r\n\r\nclass StateSerializer {\r\n  static loadState(id: string) {\r\n    try {\r\n      const serializedState = localStorage.getItem(id);\r\n      if (serializedState === null) {\r\n        return undefined;\r\n      }\r\n      return JSON.parse(serializedState);\r\n    } catch (err) {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  static saveState(id: string, state: unknown) {\r\n    try {\r\n      const serializedState = JSON.stringify(state);\r\n      localStorage.setItem(id, serializedState);\r\n    } catch (err) {\r\n      // Ignore write errors.\r\n    }\r\n  }\r\n}\r\n\r\nconst useSerializedState = <T extends unknown>(\r\n  id: string,\r\n  defaultState: T,\r\n  serializingCondition?: () => boolean\r\n): [T, (value: T) => void] => {\r\n  const initialState = (StateSerializer.loadState(id) as T) ?? defaultState;\r\n  const [state, setState] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    if (!serializingCondition || serializingCondition() === true) {\r\n      StateSerializer.saveState(id, state);\r\n    }\r\n  }, [state]);\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport { useSerializedState };\r\n\r\nexport default StateSerializer;\r\n","import { createContext } from 'react';\r\nimport StateSerializer from '../../helpers/common/StateSerializer';\r\nimport devMode from '../../helpers/common/DevMode';\r\n\r\nconst devSettings = {\r\n  skipIntro: true,\r\n  smoothScroll: true,\r\n  autoScroll: false\r\n};\r\n\r\nconst state = devMode\r\n  ? devSettings\r\n  : {\r\n      skipIntro: false,\r\n      smoothScroll: true,\r\n      autoScroll: false\r\n    };\r\n\r\nconst AppSettings = createContext(state);\r\nif (devMode) {\r\n  StateSerializer.saveState('app', state);\r\n}\r\n\r\nexport { devMode, AppSettings };\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useThree, useUpdate, useFrame } from 'react-three-fiber';\r\nimport * as THREE from 'three';\r\nimport { useSmoothScroll } from '../../../helpers/scrolling/SmoothScroll';\r\nimport useScreenSize from '../../../helpers/common/UseScreenSize';\r\nimport { Vector3, Mesh, PlaneGeometry, BufferGeometry, Geometry } from 'three';\r\nimport { a, useSpring } from 'react-spring/three';\r\nimport Easing from '../../../helpers/tween/Easing';\r\nimport { Spring } from 'react-spring/renderprops-universal';\r\nimport { interpolate } from 'react-spring';\r\nimport { useSection } from '../../../helpers/common/Section';\r\nimport { SectionId } from '../../common/PortfolioSection';\r\nimport { AppSettings } from '../../common/AppSettings';\r\n\r\nconst Plane = props => {\r\n  const geometry = useRef(null as Geometry);\r\n  /*const [defaultVertices, setDefaultVertices] = useState(null as Vector3[]);\r\n  \r\n  const modulate = (\r\n    value: number,\r\n    factor: number,\r\n    min: number,\r\n    max: number\r\n  ) => {\r\n    let delta = factor * Math.random();\r\n    if (value < min) return value + delta;\r\n    if (value > max) return value - delta;\r\n    if (Math.random() > 0.5) return value + delta;\r\n    return value - delta;\r\n  };\r\n \r\n  useEffect(() => {\r\n    if (defaultVertices) return;\r\n    const geo = geometry.current;\r\n    if (!geo) return;\r\n    setDefaultVertices(geo.vertices.slice(0));\r\n  }, [geometry]);\r\n\r\n  useFrame(() => {\r\n    const geo = geometry.current;\r\n    if (!geo) return;\r\n    for (let i = 0; i < geo.vertices.length; i++) {\r\n      const v = geo.vertices[i];\r\n      const vDefault = defaultVertices[i];\r\n      const factor = 0.01;\r\n      const range = 0.01;\r\n      const min = -range;\r\n      const max = range;\r\n      v.x = modulate(v.x, factor, vDefault.x + min, vDefault.x + max);\r\n      v.y = modulate(v.y, factor, vDefault.y + min, vDefault.y + max);\r\n      geo.vertices[i].set(v.x, v.y, v.z);\r\n      geo.verticesNeedUpdate = true;\r\n    }\r\n  });*/\r\n\r\n  return (\r\n    <a.mesh\r\n      name={`plane${props.index}`}\r\n      position={props.position}\r\n      rotation={props.rotation}\r\n      scale={props.scale}>\r\n      <a.meshBasicMaterial\r\n        attach='material'\r\n        transparent={true}\r\n        opacity={1}\r\n        color={props.color}\r\n      />\r\n      <a.planeGeometry\r\n        ref={geometry}\r\n        attach='geometry'\r\n        args={[props.width ?? 1, props.height ?? 1]}\r\n      />\r\n    </a.mesh>\r\n  );\r\n};\r\n\r\nconst Circle = props => {\r\n  return (\r\n    <a.mesh\r\n      name={`circle${props.index !== undefined ? props.index : ''}`}\r\n      position={props.position}\r\n      rotation={props.rotation}\r\n      scale={props.scale}>\r\n      <a.meshBasicMaterial\r\n        attach='material'\r\n        transparent={true}\r\n        opacity={1}\r\n        color={props.color}\r\n      />\r\n      <a.circleGeometry\r\n        attach='geometry'\r\n        args={[props.radius ?? 1, props.segments ?? 32]}\r\n      />\r\n    </a.mesh>\r\n  );\r\n};\r\n\r\nconst config = {\r\n  intro: {\r\n    tension: 170\r\n  },\r\n  out: {\r\n    tension: 100\r\n  }\r\n};\r\n\r\nconst HeaderScene = () => {\r\n  const { camera } = useThree();\r\n  const scroll = useSmoothScroll();\r\n  const screenSize = useScreenSize();\r\n  const [groupScale, setGroupScale] = useState(1);\r\n  const section = useSection<SectionId>('header');\r\n  const settings = useContext(AppSettings);\r\n\r\n  const yOut = -2.5;\r\n  const startOut = 0.15;\r\n  const active = section.ratio > startOut;\r\n  const ratioOut = active || !section.visible ? 1 : startOut - section.ratio;\r\n  const beforeOutRatio = section.ratio;\r\n\r\n  const useAnimatedShape = ({ focus, from, out = null }) => {\r\n    out = out ? { ...focus, ...out } : focus;\r\n    return useSpring({\r\n      ...(active ? focus : focus),\r\n      from: from,\r\n      config: active ? config.intro : config.out,\r\n      immediate: settings.skipIntro\r\n    });\r\n  };\r\n\r\n  const plane1 = useAnimatedShape({\r\n    from: {\r\n      position: [3, -15, 0],\r\n      rotation: [0, 0, 5],\r\n      opacity: 0\r\n    },\r\n    focus: {\r\n      color: '#2979B0',\r\n      scale: Array(3).fill(2.4),\r\n      position: [0, 0, -1],\r\n      rotation: [0, 0, 0],\r\n      opacity: 1\r\n    },\r\n    out: {\r\n      scale: Array(3).fill(1),\r\n      position: [-5 * ratioOut, 0, -1],\r\n      rotation: [0, 0, -5 * ratioOut]\r\n    }\r\n  });\r\n\r\n  const plane2 = useAnimatedShape({\r\n    from: {\r\n      position: [-5, -15, 0],\r\n      rotation: [0, 0, 3],\r\n      opacity: 0\r\n    },\r\n    focus: {\r\n      color: '#15A7D9',\r\n      scale: Array(3).fill(3),\r\n      position: [0.2, 0, -2],\r\n      rotation: [0, 0, -0.2],\r\n      opacity: 1\r\n    },\r\n    out: {\r\n      scale: Array(3).fill(2),\r\n      position: [-5, 0, -2],\r\n      rotation: [0, 0, -3.2 * ratioOut]\r\n    }\r\n  });\r\n\r\n  const plane3 = useAnimatedShape({\r\n    from: {\r\n      position: [20, -15, -5],\r\n      rotation: [0, 0, 0],\r\n      opacity: 0\r\n    },\r\n    focus: {\r\n      color: '#62a4ca',\r\n      scale: Array(3).fill(3 + 3 * beforeOutRatio),\r\n      position: [3.1, 0, -3],\r\n      rotation: [0, 0, 5.32],\r\n      opacity: 1\r\n    },\r\n    out: {\r\n      scale: Array(3).fill(3),\r\n      position: [12, -15, -5],\r\n      rotation: [0, 0, 3.3 * ratioOut]\r\n    }\r\n  });\r\n\r\n  const circle = useAnimatedShape({\r\n    from: {\r\n      position: [20, -15, -10],\r\n      rotation: [0, 0, 0],\r\n      opacity: 0\r\n    },\r\n    focus: {\r\n      color: '#62a4ca',\r\n      radius: 5,\r\n      segments: 64,\r\n      scale: Array(3).fill(1 + 3 * beforeOutRatio),\r\n      position: [3.1, 0, -5],\r\n      rotation: [0, 0, 5.32],\r\n      opacity: 1\r\n    },\r\n    out: {\r\n      scale: Array(3).fill(3),\r\n      position: [12, -15, -5],\r\n      rotation: [0, 0, 3.3 * ratioOut]\r\n    }\r\n  });\r\n\r\n  const planes = [plane1, plane2, plane3];\r\n\r\n  useEffect(() => {\r\n    /*const newScale =\r\n      screenSize.width > 900 ? 1 : screenSize.width > 600 ? 0.75 : 0.5;\r\n    setGroupScale(newScale);*/\r\n  }, [screenSize]);\r\n\r\n  const setCamera = cameraPos => {\r\n    camera.position.x = cameraPos.x;\r\n    camera.position.y = cameraPos.y;\r\n    camera.position.z = cameraPos.z;\r\n    return null;\r\n  };\r\n\r\n  const scale = groupScale;\r\n  const cameraZ = 5;\r\n  const cameraZStart = settings.skipIntro ? cameraZ : -10;\r\n  //cameraZ = cameraZ * 1 + (cameraZ * (1 - section.visibleRange) * .2);\r\n\r\n  return (\r\n    <group scale={[scale, scale, scale]}>\r\n      <Spring\r\n        from={{ x: 0, y: 0, z: cameraZStart }}\r\n        to={{ x: 0, y: 0, z: cameraZ }}>\r\n        {props => setCamera(props)}\r\n      </Spring>\r\n      <group position={[-2.5, scroll / 100, 0.1]}>\r\n        <pointLight position={[10, 10, 10]} />\r\n        {planes.map((el, i) => (\r\n          <Plane key={i} {...el} index={i + 1} />\r\n        ))}\r\n        {/* <Circle {...circle} /> */}\r\n      </group>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default HeaderScene;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\nimport React, { createContext } from 'react';\r\nimport useScreenSize from '../../helpers/common/UseScreenSize';\r\nimport { usePrevious } from '../../helpers/common/Hooks';\r\nimport { useContext } from 'react';\r\n\r\nconst GlobalStyleContext = createContext({\r\n  viewport: { width: 0, height: 0, factor: 100 }\r\n});\r\n\r\nconst GlobalStyleImpl = createGlobalStyle<{ fontSize: number }>`\r\n  ${reset}\r\n\r\n  body {\r\n    background-color: white;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  \r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n      monospace;\r\n  }\r\n\r\n  html,\r\n  body,\r\n  #root {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: 'Fira Sans Condensed', sans-serif;\r\n    font-size: ${({ fontSize }) => `${fontSize}%`};\r\n  }\r\n`;\r\n\r\nconst GlobalStyle = () => {\r\n  const screenSize = useScreenSize();\r\n  const previousSize = usePrevious(100);\r\n  const context = useContext(GlobalStyleContext);\r\n\r\n  let newSize = 100;\r\n  newSize = Math.min(100, screenSize.height / 10.3);\r\n\r\n  return <GlobalStyleImpl fontSize={newSize} />;\r\n};\r\n\r\nexport { GlobalStyleContext };\r\nexport default GlobalStyle;\r\n","import React, { useEffect } from 'react';\r\nimport { Canvas, useThree } from 'react-three-fiber';\r\nimport { Color as ThreeColor, Uncharted2ToneMapping } from 'three';\r\nimport HeaderScene from './content/header/scene';\r\nimport { useContext } from 'react';\r\nimport { GlobalStyleContext } from './common/GlobalStyle';\r\nimport * as THREE from 'three';\r\n\r\nconst ViewportTracker = () => {\r\n  const { viewport, scene } = useThree();\r\n  const context = useContext(GlobalStyleContext);\r\n\r\n  useEffect(() => {\r\n    if (viewport === undefined) return;\r\n\r\n    // setup for three inspector\r\n    window['scene'] = scene;\r\n    window.THREE = THREE;\r\n\r\n    context.viewport = viewport;\r\n  });\r\n\r\n  return null;\r\n};\r\n\r\nconst Root = ({ children }) => {\r\n  return (\r\n    <Canvas\r\n      style={{ position: 'fixed', top: 0, zIndex: -1 }}\r\n      onCreated={({ gl }) => {\r\n        gl.toneMapping = Uncharted2ToneMapping;\r\n        gl.setClearColor(new ThreeColor('white'));\r\n      }}>\r\n      <ambientLight />\r\n      {children}\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nconst World = () => (\r\n  <Root>\r\n    <ViewportTracker />\r\n    <HeaderScene />\r\n  </Root>\r\n);\r\n\r\nexport default World;\r\n","\r\n\r\nconst interpolate = <T extends unknown>(\r\n  start: T,\r\n  end: T,\r\n  t: number,\r\n  easing?: (t: number) => number,\r\n) => {\r\n  if (easing)\r\n    t = easing(t);\r\n\r\n  if (typeof start === 'number' && end !== undefined) {\r\n    const value = start + (end as number - start as number) * t;\r\n    return value as T;\r\n  } else if (Array.isArray(start) && end !== undefined) {\r\n    const array = [];\r\n    for (let i = 0; i < start.length; i++) {\r\n      array.push(interpolate(start[i], end[i], t));\r\n    }\r\n    return array as T;\r\n  } else if (typeof start === 'object' && end !== undefined) {\r\n    const keys = Object.keys(start);\r\n    const obj = {};\r\n    for (const key of keys) {\r\n      obj[key] = interpolate(start[key], end[key], t);\r\n    }\r\n    return obj as T;\r\n  } else {\r\n    return start;\r\n  }\r\n};\r\n\r\nexport default interpolate;","import { tween } from '../tween';\r\n\r\ninterface ScrollToProps {\r\n  target: HTMLDivElement | number;\r\n  duration: number | ((dist: number) => number);\r\n  easing: (t: number) => number;\r\n  offsetTop?: number;\r\n  onComplete?: () => void;\r\n}\r\n\r\nconst scrollTo = ({ target, duration, easing, offsetTop = 0, onComplete = null }) => {\r\n  let y = typeof target === 'number' ? target : target.offsetTop;\r\n  if (offsetTop) y += offsetTop;\r\n  y = Math.max(0, y);\r\n\r\n  const scrollMax = document.documentElement.scrollHeight - window.innerHeight;\r\n  if (y > scrollMax) y = scrollMax;\r\n\r\n  let d = 0;\r\n  if (typeof duration === 'number') {\r\n    d = duration;\r\n  } else {\r\n    const dist = Math.abs(window.scrollY - y);\r\n    d = duration(dist);\r\n  }\r\n\r\n  tween({\r\n    start: window.scrollY,\r\n    end: y,\r\n    duration: d,\r\n    setter: y => window.scrollTo(0, y),\r\n    easing: easing,\r\n    onComplete: onComplete,\r\n  });\r\n};\r\n\r\nexport default scrollTo;\r\n","import interpolate from \"./Interpolate\";\r\n\r\nexport interface TweenProps<T> {\r\n  start: T;\r\n  end: T;\r\n  duration: number;\r\n  setter: (x: T) => void;\r\n  easing?: (t: number) => number;\r\n  delay?: number;\r\n  id?: [number, (value: number) => void];\r\n  onComplete?: () => void;\r\n}\r\n\r\nconst tween = <T extends unknown>({\r\n  start,\r\n  end,\r\n  duration,\r\n  setter,\r\n  easing = null,\r\n  id = null,\r\n  onComplete = null,\r\n  delay = 0\r\n}: TweenProps<T>) => {\r\n  //const delta = {};\r\n  //const keys = Object.keys(start);\r\n\r\n  const [tweenId, setTweenId] = id ? id : [null, null];\r\n\r\n  /*for (let key of keys) {\r\n\t\tdelta[key] = end[key] - start[key];\r\n\t}*/\r\n\r\n  if (tweenId) {\r\n    cancelAnimationFrame(tweenId);\r\n  }\r\n\r\n  const startTween = () => {\r\n    const startTime = Date.now();\r\n    const durationMs = duration * 1000;\r\n    const endTime = startTime + durationMs;\r\n\r\n    if (duration === 0) {\r\n      setter(interpolate(start, end, 1));\r\n      return;\r\n    }\r\n\r\n    const step = (t: number) => {\r\n\r\n      const now = Date.now();\r\n\r\n      if (now >= endTime) {\r\n        if (setTweenId) setTweenId(null);\r\n        setter(interpolate(start, end, 1));\r\n        if (onComplete) {\r\n          onComplete();\r\n        }\r\n      } else {\r\n        const t = (now - startTime) / durationMs;\r\n        setter(interpolate(start, end, t, easing));\r\n        const handle = requestAnimationFrame(step);\r\n        if (setTweenId) setTweenId(handle);\r\n      }\r\n    };\r\n\r\n    const handle = requestAnimationFrame(step);\r\n    if (setTweenId) setTweenId(handle);\r\n  };\r\n\r\n  if (delay) {\r\n    const handle = setTimeout(startTween, delay * 1000);\r\n    if (setTweenId) setTweenId(handle);\r\n  } else {\r\n    startTween();\r\n  }\r\n};\r\n\r\nconst cancelTween = (handle: number) => {\r\n  cancelAnimationFrame(handle);\r\n};\r\n\r\nexport { tween, cancelTween };\r\n","/*\r\n * Easing Functions - inspired from http://gizma.com/easing/\r\n * only considering the t value for the range [0, 1] => [0, 1]\r\n */\r\nconst Easing = {\r\n\t// no easing, no acceleration\r\n\tlinear: function(t: number) {\r\n\t\treturn t;\r\n\t},\r\n\t// accelerating from zero velocity\r\n\teaseInQuad: function(t: number) {\r\n\t\treturn t * t;\r\n\t},\r\n\t// decelerating to zero velocity\r\n\teaseOutQuad: function(t: number) {\r\n\t\treturn t * (2 - t);\r\n\t},\r\n\t// acceleration until halfway, then deceleration\r\n\teaseInOutQuad: function(t: number) {\r\n\t\treturn t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\r\n\t},\r\n\t// accelerating from zero velocity\r\n\teaseInCubic: function(t: number) {\r\n\t\treturn t * t * t;\r\n\t},\r\n\t// decelerating to zero velocity\r\n\teaseOutCubic: function(t: number) {\r\n\t\treturn --t * t * t + 1;\r\n\t},\r\n\t// acceleration until halfway, then deceleration\r\n\teaseInOutCubic: function(t: number) {\r\n\t\treturn t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\r\n\t},\r\n\t// accelerating from zero velocity\r\n\teaseInQuart: function(t: number) {\r\n\t\treturn t * t * t * t;\r\n\t},\r\n\t// decelerating to zero velocity\r\n\teaseOutQuart: function(t: number) {\r\n\t\treturn 1 - --t * t * t * t;\r\n\t},\r\n\t// acceleration until halfway, then deceleration\r\n\teaseInOutQuart: function(t: number) {\r\n\t\treturn t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\r\n\t},\r\n\t// accelerating from zero velocity\r\n\teaseInQuint: function(t: number) {\r\n\t\treturn t * t * t * t * t;\r\n\t},\r\n\t// decelerating to zero velocity\r\n\teaseOutQuint: function(t: number) {\r\n\t\treturn 1 + --t * t * t * t * t;\r\n\t},\r\n\t// acceleration until halfway, then deceleration\r\n\teaseInOutQuint: function(t: number) {\r\n\t\treturn t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\r\n\t},\r\n};\r\n\r\nexport default Easing;\r\n","import * as React from 'react';\r\nimport { createContext, useContext, useRef, useState, useEffect } from 'react';\r\nimport useScroll from './UseScroll';\r\nimport scrollTo from './ScrollTo';\r\nimport { Size } from '../common/UseScreenSize';\r\nimport Hashset from '../common/Hashset';\r\nimport Easing from '../tween/Easing';\r\n\r\n// context\r\n\r\ntype ScrollMode = 'default' | 'closest' | 'closestForward' | 'nextForward';\r\n\r\ninterface ScrollMagnetContextProps {\r\n  mode?: ScrollMode;\r\n  easing?: (x: number) => number;\r\n  tweenDuration?: number;\r\n  children: unknown;\r\n  debug?: boolean;\r\n}\r\n\r\nclass SrollMagnetContextState {\r\n  public props: ScrollMagnetContextProps;\r\n  public closestName = '';\r\n  public onCurrentChange?: (name: string) => void;\r\n\r\n  private scrollY = 0;\r\n  private screenSize: Size = { width: 0, height: 0 };\r\n  private current?: ScrollMagnetState;\r\n  private magnets = new Hashset<ScrollMagnetState>();\r\n  private inTransition = false;\r\n  private scrollStep = 0;\r\n\r\n  public init(props: ScrollMagnetContextProps) {\r\n    this.props = props;\r\n  }\r\n\r\n  public setScroll(y: number) {\r\n    this.scrollStep = y - this.scrollY;\r\n    this.scrollY = y;\r\n    this.update();\r\n  }\r\n\r\n  public setScreenSize(size: Size) {\r\n    this.screenSize = size;\r\n  }\r\n\r\n  public add(magnet: ScrollMagnetState) {\r\n    if (this.magnets.add(magnet)) {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  public remove(magnet: ScrollMagnetState) {\r\n    if (this.magnets.remove(magnet)) {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  private update() {\r\n    if (this.props.mode === 'default') return;\r\n\r\n    if (this.inTransition === true) return;\r\n\r\n    let deltaY = 0;\r\n    let closest: ScrollMagnetState = null;\r\n    let closestDist = Number.MAX_VALUE;\r\n    let closestDelta = 0;\r\n\r\n    if (this.props.mode === 'nextForward') {\r\n      const dir = this.scrollStep > 0 ? 1 : -1;\r\n      const currentIndex = this.current\r\n        ? this.magnets.indexOf(this.current)\r\n        : 0;\r\n      const nextIndex = Math.max(\r\n        0,\r\n        Math.min(currentIndex + dir, this.magnets.length - 1)\r\n      );\r\n      if (nextIndex === currentIndex) return;\r\n      const magnet = this.magnets[nextIndex];\r\n\r\n      const el = magnet.getElement();\r\n      const rect = el.getBoundingClientRect();\r\n      deltaY = rect.top - this.screenSize.height * magnet.y;\r\n      closest = magnet;\r\n      closestDelta = deltaY;\r\n    } else {\r\n      this.magnets.forEach(magnet => {\r\n        if (magnet === this.current) return;\r\n\r\n        const el = magnet.getElement();\r\n        const rect = el.getBoundingClientRect();\r\n        deltaY = rect.top - this.screenSize.height * magnet.y;\r\n\r\n        // magnet is active only if we scroll toward it\r\n        if (this.props.mode !== 'closest' && this.scrollStep * deltaY < 0)\r\n          return;\r\n\r\n        const dist = Math.abs(deltaY);\r\n\r\n        if (\r\n          magnet.minDistance <= dist &&\r\n          dist <= magnet.maxDistance &&\r\n          dist < closestDist\r\n        ) {\r\n          closest = magnet;\r\n          closestDist = dist;\r\n          closestDelta = deltaY;\r\n          this.closestName = closest.name;\r\n          if (this.onCurrentChange != null) this.onCurrentChange(closest.name);\r\n        }\r\n      });\r\n      if (!closest || closest === this.current) return;\r\n    }\r\n\r\n    this.current = closest;\r\n\r\n    this.inTransition = true;\r\n    scrollTo({\r\n      target: this.scrollY + closestDelta,\r\n      duration: this.props.tweenDuration ?? 1,\r\n      easing: this.props.easing ?? Easing.easeOutQuint,\r\n      onComplete: () => (this.inTransition = false)\r\n    });\r\n  }\r\n}\r\n\r\nconst ScrollMagnetContext = createContext(new SrollMagnetContextState());\r\n\r\n// area\r\n\r\nconst ScrollMagnetArea = ({\r\n  children,\r\n  mode = 'closestForward',\r\n  easing = Easing.easeOutCubic,\r\n  tweenDuration = 0.5,\r\n  debug = false\r\n}: ScrollMagnetContextProps) => {\r\n  const context = useContext(ScrollMagnetContext);\r\n  // const screenSize = useScreenSize(size => context.setScreenSize(size));\r\n  const [currentName, setCurrentName] = useState(context.closestName);\r\n  context.onCurrentChange = name => setCurrentName(name);\r\n  context.init({ mode, easing, tweenDuration, children });\r\n  context.setScroll(useScroll());\r\n  return (\r\n    <>\r\n      <div>\r\n        {debug ? (\r\n          <div style={{ position: 'fixed', color: 'white' }}>{currentName}</div>\r\n        ) : null}\r\n        {children}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// magnet\r\n\r\ninterface ScrollMagnetProps {\r\n  name?: string;\r\n  minDistance?: number;\r\n  maxDistance?: number;\r\n  children?: JSX.Element;\r\n  x?: number;\r\n  y?: number;\r\n}\r\n\r\ninterface ScrollMagnetState {\r\n  name?: string;\r\n  getElement(): HTMLDivElement;\r\n  active: boolean;\r\n  minDistance: number;\r\n  maxDistance: number;\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nconst ScrollMagnet = ({\r\n  name,\r\n  children,\r\n  minDistance = 10,\r\n  maxDistance = 300,\r\n  x = 0.5,\r\n  y = 0.5\r\n}: ScrollMagnetProps) => {\r\n  const context = useContext(ScrollMagnetContext);\r\n  const div = useRef(null as HTMLDivElement);\r\n  const [magnet] = useState({\r\n    getElement: () => div.current,\r\n    name: name,\r\n    minDistance: minDistance,\r\n    maxDistance: maxDistance,\r\n    x: x,\r\n    y: y\r\n  } as ScrollMagnetState);\r\n\r\n  useEffect(() => {\r\n    context.add(magnet);\r\n    return () => context.remove(magnet);\r\n  }, [context, magnet]);\r\n\r\n  return (\r\n    <div ref={div} style={false ? { border: 'thick solid red' } : {}}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { ScrollMagnet, ScrollMagnetArea };\r\n","import styled from 'styled-components';\r\n\r\nexport const Centered = styled.div`\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\tmargin-right: -50%;\r\n\ttransform: translate(-50%, -50%);\r\n`;\r\n","const info = {\r\n  firstName: 'Hadrien',\r\n  lastName: 'Grandry',\r\n  job: 'Freelance Developer',\r\n  tag: 'Drawing squares since 1998.',\r\n  speciality: 'Unity .net',\r\n  location: 'Montreal & remote'\r\n};\r\n\r\nconst about = {\r\n  intro: \"Hi there! My name is Hadrien, I'm a freelance developer living in Montreal.\",\r\n  experience: \"I have been developing software for over 15 years, crafting user interfaces, games and production tools.\",\r\n  tools: \"I love exploring new tools and technologies. These days I'm working mostly with Unity and C# for games or interactive content, .net for the server-side and tools, and React with Typescript for web development.\",\r\n  speciality: \"Over the years, I have developed a process to write modular software that scales and delivers high-end user experiences.\",\r\n  service: 'I can help you kick-off your project the right way, build and improve your existing code-base and provides analysis and counseling to grow your project.',\r\n  getInTouch: 'Let\\'s get in touch!'\r\n};\r\n\r\nexport { info, about };\r\n","import * as React from 'react';\r\nimport { Section } from '../../helpers/common/Section';\r\n\r\nexport type SectionId = 'header' | 'work' | 'about';\r\n\r\nconst PortfolioSection = ({\r\n  id,\r\n  children = null,\r\n  height = 0\r\n}: {\r\n  id: SectionId;\r\n  children?: JSX.Element | JSX.Element[];\r\n  height?: number;\r\n}) => (\r\n  <Section id={id} height={height}>\r\n    {children}\r\n  </Section>\r\n);\r\n\r\nexport default PortfolioSection;\r\n","import * as React from 'react';\r\nimport useScreenSize, { Size } from '../../../helpers/common/UseScreenSize';\r\nimport { CSSProperties } from 'styled-components';\r\nimport styled from 'styled-components';\r\nimport { Centered } from '../../../helpers/common/Layout';\r\nimport { info } from '../../../data/About';\r\nimport { animated as a, useSpring } from 'react-spring';\r\nimport PortfolioSection from '../../common/PortfolioSection';\r\nimport { AppSettings } from '../../common/AppSettings';\r\nimport { useContext } from 'react';\r\n\r\nconst Div = styled.div`\r\n  display: block;\r\n  position: relative;\r\n  color: white;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Name = styled(a.div)`\r\n  font-size: 3.8rem;\r\n  transform: translateY(1.5rem);\r\n`;\r\n\r\nconst Infos = styled.div`\r\n  font-size: 2.1rem;\r\n  transform: translate(7rem, 3rem);\r\n`;\r\n\r\nconst Job = styled(a.div)``;\r\n\r\nconst Location = styled(a.div)`\r\n  color: white;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst divStyle = (props: { size: Size }): CSSProperties => ({\r\n  height: props.size.height - 1,\r\n  width: props.size.width - 20\r\n});\r\n\r\nconst Header = () => {\r\n  const screenSize = useScreenSize();\r\n  const settings = useContext(AppSettings);\r\n\r\n  const immediate = settings.skipIntro;\r\n\r\n  const name = useSpring({\r\n    opacity: 1,\r\n    transform: 'translateX(-9.1rem)',\r\n    from: {\r\n      opacity: 0,\r\n      transform: 'translateX(-20rem)'\r\n    },\r\n    delay: immediate ? 0 : 500,\r\n    immediate\r\n  });\r\n\r\n  const job = useSpring({\r\n    opacity: 1,\r\n    transform: 'translateX(3rem)',\r\n    from: {\r\n      opacity: 0,\r\n      transform: 'translateX(10rem)'\r\n    },\r\n    delay: immediate ? 0 : 1000,\r\n    immediate\r\n  });\r\n\r\n  const loc = useSpring({\r\n    opacity: 1,\r\n    transform: 'translate(3rem, .5rem)',\r\n    from: {\r\n      opacity: 0,\r\n      transform: 'translate(10rem, .5rem)'\r\n    },\r\n    delay: immediate ? 0 : 1200,\r\n    immediate\r\n  });\r\n\r\n  return (\r\n    <PortfolioSection id='header'>\r\n      <Div style={divStyle({ size: screenSize })}>\r\n        <Centered>\r\n          <Name style={name}>\r\n            {info.firstName} {info.lastName}\r\n          </Name>\r\n          <Infos>\r\n            <Job style={job}>{info.job}</Job>\r\n            <Location style={loc}>{info.location}</Location>\r\n          </Infos>\r\n        </Centered>\r\n      </Div>\r\n    </PortfolioSection>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import {TwitterSquare} from '@styled-icons/fa-brands/TwitterSquare';\r\nimport {Linkedin} from '@styled-icons/fa-brands/Linkedin';\r\nimport {GithubSquare} from '@styled-icons/fa-brands/GithubSquare';\r\nimport {Mail} from '@styled-icons/foundation/Mail';\r\nimport {StyledIcon} from 'styled-icons/types';\r\nimport {FilePdf} from '@styled-icons/fa-solid/FilePdf';\r\n\r\nexport const links = {\r\n  resume: 'https://drive.google.com/file/d/1F9Jrol8sYWp_dm1XgvlYUMsGsJ-2WR2L/view',\r\n  mail: 'mailto:hadrien.grandry@gmail.com',\r\n  linkedin: 'https://www.linkedin.com/in/hgrandry',\r\n  github: 'https://github.com/hgrandry',\r\n  twitter: 'https://twitter.com/hgrandry'\r\n};\r\n\r\nexport interface ContactDescription {\r\n  icon: StyledIcon;\r\n  link: string;\r\n  width: number;\r\n  height: number;\r\n  top: number;\r\n}\r\n\r\nconst size = {\r\n  width: 2,\r\n  height: 2,\r\n  top: 0\r\n};\r\n\r\nconst contacts: ContactDescription[] = [\r\n  {\r\n    ...size,\r\n    height: 1.9,\r\n    icon: FilePdf,\r\n    link: links.resume\r\n  }, {\r\n    ...size,\r\n    width: 2.5,\r\n    height: 2.5,\r\n    icon: Mail,\r\n    link: links.mail\r\n  }, {\r\n    ...size,\r\n    icon: Linkedin,\r\n    link: links.linkedin\r\n  }, {\r\n    ...size,\r\n    icon: GithubSquare,\r\n    link: links.github\r\n  }, {\r\n    ...size,\r\n    icon: TwitterSquare,\r\n    link: links.twitter\r\n  }\r\n];\r\n\r\nexport default contacts;\r\n","import React, { CSSProperties } from 'react';\r\nimport styled from 'styled-components';\r\nimport contactData /*, { mailLink, linkedin } */ from '../../../data/Contact';\r\n// import { Paragraph } from '../../common/Layout';\r\n\r\nconst ContactSection = styled.footer`\r\n  padding: 0 1.5rem 1.5rem;\r\n`;\r\n/*\r\nconst Text = styled(Paragraph)<{ colors: any }>`\r\n  display: block;\r\n  margin: 25px auto 0 auto;\r\n  text-align: center;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  color: ${({ colors }) => 'black'};\r\n  & a {\r\n    color: ${({ colors }) => 'black'};\r\n    text-decoration: none;\r\n  }\r\n`;*/\r\n\r\nconst ContactList = styled.ul`\r\n  height: 4rem;\r\n  padding: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Contact = styled.a`\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  margin: 0.3rem;\r\n`;\r\n\r\nconst Contacts = () => {\r\n  return (\r\n    <ContactSection>\r\n      {/* <SectionTitle colors={colors}>Contact</SectionTitle> */}\r\n      {/* <Text colors={colors}>Hello blabla bla</Text> */}\r\n      {/* <Text colors={{ titleColor: 'black' }}>\r\n        If you have questions, or want to talk about your project...\r\n        <br />\r\n        You can reach me at <a href={mailLink}>hadrien.grandry@gmail.com</a> or\r\n        via <a href={linkedin}>Linkedin</a>.\r\n        <br />\r\n        <br />\r\n        Looking forward to talking with you!\r\n      </Text> */}\r\n      <ContactList>\r\n        {contactData.map((contact, index) => {\r\n          const Icon = contact.icon;\r\n          const iconStyle: CSSProperties = {\r\n            color: '#328ABE',\r\n            width: `${contact.width}rem`,\r\n            height: `${contact.height}rem`,\r\n            position: 'relative',\r\n            top: `${contact.top}rem`\r\n          };\r\n\r\n          return (\r\n            <Contact key={index} href={contact.link}>\r\n              {/* <TintImage\r\n                width={24}\r\n                height={24}\r\n                src={process.env.PUBLIC_URL + '/' + contact.image}\r\n                color={colors.workTitle as Color}\r\n              /> */}\r\n              <Icon style={iconStyle} />\r\n            </Contact>\r\n          );\r\n        })}\r\n      </ContactList>\r\n    </ContactSection>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import styled from 'styled-components';\r\nimport React, {useContext, useMemo} from 'react';\r\nimport {SmoothScrollContext} from '../../helpers/scrolling/SmoothScroll';\r\n\r\nconst Accent = styled.span`\r\n  color: #15a7d9;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Accentuate = ({\r\n  text,\r\n  accentuate\r\n}: {\r\n  text: string;\r\n  accentuate: string[];\r\n}) => {\r\n  return useMemo(() => {\r\n    if (accentuate.length == 0) return <>{text}</>;\r\n\r\n    //console.log('render accentuate');\r\n    const blocks = text.split(accentuate[0]);\r\n\r\n    return (\r\n      <>\r\n        {blocks.map((block, index) => {\r\n          return (\r\n            <span key={index}>\r\n              <Accentuate text={block} accentuate={accentuate.slice(1)}/>\r\n              {index < blocks.length - 1 ? (\r\n                <Accent>{accentuate[0]}</Accent>\r\n              ) : null}\r\n            </span>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }, [text, ...accentuate]);\r\n};\r\n\r\nexport default Accentuate;\r\n","import { useSpring } from 'react-spring';\r\nimport { useSpring as useSpringThree} from 'react-spring/three';\r\nimport { useContext } from 'react';\r\nimport {DevReloadClockContext} from './DevReloadClock';\r\nimport devMode from './DevMode';\r\n\r\nconst useDevSpring = !devMode? useSpring: (params: any) => {\r\n  const {devClock} = useContext(DevReloadClockContext);\r\n  const options = devClock.started \r\n    ? {...params, immediate: params.immediate, delay: params.delay }\r\n    : {...params, immediate: true, delay: 0 };\r\n  return useSpring(options);\r\n};\r\n\r\nconst useDevSpringThree = !devMode? useSpringThree: (params: any) => {\r\n  const {devClock} = useContext(DevReloadClockContext);\r\n  const options = devClock.started\r\n    ? {...params, immediate: params.immediate, delay: params.delay }\r\n    : {...params, immediate: true, delay: 0 };\r\n  return useSpringThree(options);\r\n};\r\n\r\nexport { useDevSpring, useDevSpringThree }","import * as React from 'react';\r\nimport {about} from '../../../data/About';\r\nimport styled from 'styled-components';\r\nimport Accentuate from '../../common/Accentuate';\r\nimport {\r\n  useSection,\r\n  SectionState,\r\n} from '../../../helpers/common/Section';\r\nimport {useState, useEffect} from 'react';\r\nimport useScreenSize from '../../../helpers/common/UseScreenSize';\r\nimport interpolate from '../../../helpers/tween/Interpolate';\r\nimport {animated} from 'react-spring';\r\nimport {useDevSpring} from '../../../helpers/common/Springs';\r\nimport Tools from './tools';\r\n\r\n\r\nconst useSectionInterpolation = <T extends object>(\r\n  id: string,\r\n  target: number,\r\n  fullRange: number,\r\n  fadeRange: number,\r\n  fullStart: T,\r\n  fullEnd: T,\r\n  fadeStart: T,\r\n  fadeEnd: T): [SectionState, number, T] => {\r\n\r\n  const section = useSection(id);\r\n  if (!section.visible)\r\n    return [section, 0, fadeEnd];\r\n\r\n  const ratio = (section.viewport.center - section.rect.top) / section.rect.height;\r\n\r\n  const minFull = target - fullRange;\r\n  const maxFull = target + fullRange;\r\n  const minFaded = minFull - fadeRange;\r\n  const maxFaded = maxFull + fadeRange;\r\n\r\n  let result;\r\n\r\n  if (ratio <= minFaded) {\r\n    result = {...fadeStart};\r\n  } else if (ratio <= minFull) {\r\n    const t = (ratio - minFaded) / (minFull - minFaded);\r\n    result = interpolate(fadeStart, fullStart, t);\r\n  } else if (ratio <= maxFull) {\r\n    const t = (ratio - minFull) / (maxFull - minFull);\r\n    result = interpolate(fullStart, fullEnd, t);\r\n  } else if (ratio <= maxFaded) {\r\n    const t = (ratio - maxFull) / (maxFaded - maxFull);\r\n    result = interpolate(fullEnd, fadeEnd, t);\r\n  } else {\r\n    result = {...fadeEnd};\r\n  }\r\n\r\n  return [section, ratio, result];\r\n};\r\n\r\nconst AboutElement = ({target, setRatio = null, children}:\r\n                        {\r\n                          target: number,\r\n                          setRatio?: (value: number) => void,\r\n                          children: JSX.Element | JSX.Element[]\r\n                        }) => {\r\n  const size = useScreenSize();\r\n  const [section, ratio, current] = useSectionInterpolation('about', target, .1, .1,\r\n    {\r\n      opacity: 1,\r\n      y: size.height * .55\r\n    },\r\n    {\r\n      opacity: 1,\r\n      y: size.height * .45\r\n    },\r\n    {\r\n      opacity: 0,\r\n      y: size.height\r\n    },\r\n    {\r\n      opacity: 0,\r\n      y: 0\r\n    });\r\n\r\n  const style = useDevSpring({\r\n    opacity: current.opacity,\r\n    transform: `translateY(${current.y}px)`\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (setRatio) {\r\n      setRatio(ratio);\r\n    }\r\n  }, [ratio]);\r\n\r\n  return section.visible\r\n    ? <animated.div style={style}>\r\n      {children}\r\n    </animated.div> : null;\r\n};\r\n\r\nconst Paragraph = styled(animated.div)`\r\n  width: 40rem;\r\n  height: fit-content;\r\n  color: black;\r\n  font-size: 1.5rem;\r\n  line-height: 2rem;\r\n  font-family: 'Raleway', sans-serif;\r\n`;\r\n\r\nconst Left = styled(Paragraph)`\r\n  margin-left: 10%;\r\n`;\r\n\r\nconst TopLeft = styled(Left)`\r\n  margin-top: 20%;\r\n`;\r\n\r\nconst Right = styled(Paragraph)`\r\n  margin-right: 10%;\r\n  right: 0;\r\n  text-align: right;\r\n`;\r\n\r\nconst BottomRight = styled(Right)`\r\n  margin-bottom: 20%;\r\n  bottom: 0;\r\n`;\r\n\r\nconst AboutDiv = styled.div`\r\n  position: relative;\r\n  height: fit-content;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 4rem;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  width: auto;\r\n`;\r\n\r\nconst Break = styled.div`\r\n  height: 2rem;\r\n`;\r\n\r\nconst About = () => {\r\n\r\n  const section = useSection('about');\r\n\r\n  const f = Math.max(0, 1 - section.ratio);\r\n\r\n  const useStyle = () => useDevSpring({\r\n    transform: `translateY(${500 * (1 - section.ratio)}px)`,\r\n    opacity: 1 - f\r\n  });\r\n\r\n  const topStyle = useStyle();\r\n  // if(!section.visible) return null;\r\n\r\n  return (\r\n    <AboutDiv>\r\n      <Row>\r\n        <Paragraph >\r\n          <Accentuate text={about.intro} accentuate={['Hadrien']}/>\r\n          <Break/>\r\n          <Accentuate\r\n            text={about.experience}\r\n            accentuate={['user interfaces', 'games', 'production tools']}\r\n          />\r\n          <Break/>\r\n          {/* <Accentuate\r\n            text={about.tools}\r\n            accentuate={['Unity', '.net', 'C#', 'React', 'Typescript']}\r\n          />\r\n          <Break/> \r\n          <Tools ratio={1}/>\r\n          <Break/>*/}\r\n          <Accentuate\r\n            text={about.speciality}\r\n            accentuate={['scales', 'user experiences']}\r\n          />\r\n          <Break/>\r\n          <Accentuate\r\n            text={about.service}\r\n            accentuate={['help you']}\r\n          />\r\n          <Break/>\r\n          <Accentuate\r\n            text={about.getInTouch}\r\n            accentuate={['']}\r\n          />\r\n          <Break/>\r\n        </Paragraph>\r\n      </Row>\r\n    </AboutDiv>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ScrollMagnetArea } from '../helpers/scrolling/ScrollMagnet';\r\nimport Header from './content/header';\r\nimport DummySection from './content/dummy';\r\nimport Contacts from './content/contact';\r\nimport { SmoothScrollArea } from '../helpers/scrolling/SmoothScroll';\r\nimport { SectionArea, Section as SectionImpl } from '../helpers/common/Section';\r\nimport { AppSettings, devMode } from './common/AppSettings';\r\nimport { useContext } from 'react';\r\nimport { useSerializedState } from '../helpers/common/StateSerializer';\r\nimport { useTimeoutFn } from 'react-use';\r\nimport scrollTo from '../helpers/scrolling/ScrollTo';\r\nimport Easing from '../helpers/tween/Easing';\r\nimport useScreenSize from '../helpers/common/UseScreenSize';\r\nimport About from './content/about';\r\nimport Color from 'color';\r\n\r\nconst Div = styled.div`\r\n  z-index: 10;\r\n`;\r\n\r\nexport type SectionId = 'header' | 'about' | 'intro' | 'work';\r\n\r\nconst Section = ({\r\n  id,\r\n  children = null,\r\n  color = null,\r\n  height = 0\r\n}: {\r\n  id: SectionId;\r\n  children?: JSX.Element | JSX.Element[];\r\n  color?: string,\r\n  height?: number;\r\n}) => (\r\n  <SectionImpl id={id} height={height} color={color}>\r\n    {children}\r\n  </SectionImpl>\r\n);\r\n\r\nconst Sections = () => {\r\n  const settings = useContext(AppSettings);\r\n  const screenSize = useScreenSize();\r\n  const [scroll, setScroll] = useSerializedState('scroll', 0, () => devMode);\r\n\r\n  /*useTimeoutFn(() => {\r\n    if (settings.skipIntro || !settings.autoScroll) return;\r\n    scrollTo({ target: 1000, duration: 0.8, easing: Easing.easeInOutCubic });\r\n  }, 1500);*/\r\n\r\n  return (\r\n    <SmoothScrollArea\r\n      enabled={settings.smoothScroll}\r\n      startValue={scroll}\r\n      onChange={setScroll}>\r\n      <SectionArea>\r\n        <Div>\r\n          <ScrollMagnetArea debug={false} mode='default'>\r\n            <Header />\r\n            {/* <About /> */}\r\n            <Section id='about' color={null} >\r\n              <About />\r\n            </Section>\r\n            {/*<DummySection name='Work' color='green' sectionId='work' />*/}\r\n            <Contacts />\r\n          </ScrollMagnetArea>\r\n        </Div>\r\n      </SectionArea>\r\n    </SmoothScrollArea>\r\n  );\r\n};\r\n\r\nexport default Sections;\r\n","\r\nconst devMode = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\r\n\r\nexport default devMode;","import React from 'react';\r\nimport World from './World';\r\nimport Sections from './Sections';\r\nimport GlobalStyle from './common/GlobalStyle';\r\nimport About from './content/about';\r\nimport styled from 'styled-components';\r\nimport { DevReloadClock } from '../helpers/common/DevReloadClock';\r\n\r\nconst Content = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  z-index: 20;\r\n  position: fixed;\r\n  top: 0;\r\n  display: block;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <DevReloadClock>\r\n        <Sections />\r\n        {/* <Content>\r\n          <About />\r\n        </Content>*/}\r\n        <World />\r\n      </DevReloadClock>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './tools/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}